  i want to talk to you today about something the open source programming world can teach democracy
 but before that a little preamble let 's
 start here  this is martha payne martha 's a 9 year old scot who lives in the council of argyll and bute a
 couple months ago payne started a food blog called neverseconds
  and she would take her camera with her every day to school to document her school lunches  can you spot the vegetable 
 and as sometimes happens
  this blog acquired first dozens of readers  and then hundreds of readers  and then thousands of readers as people tuned in to watch her rate her school lunches  including on my favorite category pieces of hair found in food
 this was a zero day that 's good
  and then two weeks ago yesterday she posted this 
 a post that read goodbye and she said i 'm very sorry to tell you this  but my head teacher pulled me out of class today and told me
 i 'm not allowed to take pictures in the lunch room anymore i really enjoyed doing this  thank
  outrage was so swift  so voluminous so unanimous that the council of argyll and bute reversed themselves the same day and said we would we would never censor a nine year old 
 except of course  this morning and
 this
  up the question what made them think they could get away with something like that 
 and the answer is all of human history prior to now 
 so 
 what happens when a medium suddenly puts a lot of new ideas into circulation  
 now this isn 't just a contemporaneous question this is something we 've faced several times over the last few centuries when the telegraph came along it was clear
  it was going to globalize the news industry what would this lead to  well  obviously it would lead to world peace  
 the television a medium that allowed us not just to hear but see literally see what was going on elsewhere in the world what would this lead to 
 world peace the telephone  you guessed it world
  sorry for the spoiler alert but
 no world peace not yet  even the printing press even the printing press was assumed to be a tool that was going to enforce
 catholic intellectual hegemony across europe instead what we got was martin luther 's ninety five theses  the protestant reformation and you
 know the thirty years ' war all
 right so what all of these predictions of world peace got right
 is that when a lot of new ideas suddenly come into circulation
  changes society  what they got exactly wrong was what happens next  
 the more ideas there are in circulation the more ideas there are for any individual to disagree with 
 more media always means more arguing that 's what happens when the media 's space expands  
  when we look back on the printing press in the early years we like what happened we are a 
  press society  
 so how do we square those two things that it leads to more arguing  but we think it was good  
 and the answer i think can be found in things like this  
 this is the cover of philosophical transactions the first scientific journal ever published in english in the middle of the 1600s 
 and it was created by a group of people who had been calling themselves the invisible college a group of natural philosophers
  who only later would call themselves scientists  
 and they wanted to improve the way natural philosophers argued with each other 
 and they needed to do two things for this they needed openness they needed to create a norm which said when you do an experiment  you have to publish not just your claims but how you did the experiment if you don 't tell us how you did it we won 't trust you 
 but the other thing they needed was speed they had to
  quickly synchronize what other natural philosophers knew otherwise you couldn 't get the right kind of argument going 
 the printing press was clearly the right medium for this  but the book was the wrong tool it was too slow 
 and so they invented the scientific journal as a way of synchronizing the argument across the community of natural
  the scientific revolution wasn 't created by the printing press it was created by scientists  but it couldn 't have been created if they didn 't have a printing press as a tool  
 so what about us what about our generation and our media revolution the internet  well  predictions of world peace  check 
 more arguing  gold star on that one
  youtube is just a gold mine 
 better arguing 
 that 's the question  
 so i study social media which means to a first approximation i watch people argue  
 and if i had to pick a group that i think is our invisible college is our generation 's collection of people trying to take these tools and to press it into service not for more arguments but for better
  arguments  i 'd pick the open source programmers 
 programming is a three way relationship between a programmer some source code  and the computer it 's meant to run on 
 but computers are such famously inflexible interpreters of instructions that it 's extraordinarily difficult to write out a set of instructions that the computer knows how to execute  and that 's if one person is writing it 
 once you get more
  more than one person writing it it 's very easy for any two programmers to overwrite each other 's work if they 're working on the same file  or to send incompatible instructions that simply causes the computer to choke  
 and this problem grows larger the more programmers are involved 
 to a first approximation  the problem of managing a large software project
 is the problem of keeping this social
  chaos at bay 
 now for decades there has been a canonical solution to this problem which is to use something called a version control system 
 and a version control system does what is says on the tin it provides a canonical copy of the software
 on a server somewhere  the only programmers who can change it are people who 've specifically been given permission to access it 
 and they 're only allowed to access the
 sub section of it that they have permission to change  
 and when people draw diagrams of version control systems the diagrams always look something like this all right they look like org charts  
 and you don 't have to squint very hard to see the political ramifications of a system like this  this is feudalism one owner many
  that 's fine for the commercial software industry  it really is microsoft 's office  it 's adobe 's photoshop  
 the corporation owns the software the programmers come and go  but there was one programmer
 who decided that this wasn 't the way to work this is linus torvalds torvalds is the most famous open source programmer 
  looked at the way the open source movement had been dealing with this problem
 open source software the core promise of the open source license is that everybody should have access to all the source code all the time  
 but of course  this creates the very threat of chaos you have to forestall in order to get anything working  
 so most open source projects just held their noses and adopted the feudal management systems
  torvalds said no i 'm not going to do that 
 his point of view on this was very clear 
 when you adopt a tool you also adopt the management philosophy embedded in that tool  and he wasn 't going to adopt anything that didn 't work the way the linux community worked 
 and to give you a sense of how enormous a decision like this was 
 this is a map
 of the
  internal dependencies within linux within the linux operating system which sub parts of the program rely on which other 
 to get going  this is a tremendously complicated process  this is a tremendously complicated program  
 and yet for years  torvalds ran this not with automated tools but out of his email box people would literally mail him changes that
  they 'd agreed on and he would merge them by hand  
 and then fifteen years after looking at linux and figuring out how the community worked he said i think i know how to write a version control system for free people 
 and he called it
  traditional version control systems  the first is that it lives up to the philosophical promise of open source everybody who works on a project has access to all of the source code all of the time  and when people draw diagrams of git workflow 
 they use drawings that look like this  
 and you don 't have to understand what the circles and boxes and arrows mean to see that this is a far more complicated way of
  working than is supported by ordinary version control systems  but this is also the thing that brings the chaos back 
 and this is git 's second big innovation  
 this is a screenshot from github the premier git hosting service 
 and every time a programmer uses git to make any important change at all 
 creating a new file  modifying an existing one
  one merging two files git creates this kind of signature this long string of numbers and letters here
 is a unique identifier tied to every single change  
 but without any central coordination every git system generates this number the same
  which means this is a signature tied directly and unforgeably to a particular change  this has the following effect 
 a programmer in edinburgh
 and a programmer in entebbe
 can both get the same a copy of the same piece of software each of them can make changes
 and they can merge them after the fact even if they didn 't know of each other 's existence
  this is cooperation without coordination  this is the big change 
 now  i tell you all of this not to convince you
 that it 's great that 
  programmers now have a tool that supports their philosophical way of working although i think that is great 
 i tell you all of this because of what i think it means for the way communities come together
  cooperation without coordination  you start to see communities form
 that are enormously large and complex  this is a graph of the ruby community it 's an open source programming language and all of the interconnections between 
  the people this is now not a software graph but a people graph all of the interconnections among the people working on that project
  doesn 't look like an org chart  this looks like a dis org chart  and yet out of this community but using these tools they can now create something together  
 so there are two good reasons to think that this kind of technique can be applied to democracies in general and in particular to the law 
 when you make the claim in fact
  that something on the internet is going to be good for democracy  you often get this reaction 
 which is 
 are you talking about the thing with the singing cats like is that the thing you think is going to be good for society 
 to which i have
  here 's the thing with the singing cats that always happens
  and i don 't just mean that always happens with the internet i mean that always happens with media full stop 
 it did not take long after the rise of the commercial printing press before someone figured out that erotic novels were a good idea 
 you don 't have to have an economic incentive to sell books very long before someone says hey you know what i bet people would pay for 
 it took people another one hundred and fifty years to even think of the scientific journal
 so 
 so the harnessing by the invisible college of the printing press to create the scientific journal was phenomenally important but it
 didn 't happen big and it didn 't happen quick  and it didn 't happen fast so if you 're going to look for where the change is happening you have to
  is a graph of the u s tax code  and the dependencies of one law on other laws for the overall effect
 so there 's that as a site for source code management 
 but there 's also the fact that law is another place where there are many opinions in circulation  but they need to be resolved to one canonical copy 
 and when you go onto github  and you look around there are
  and millions of projects almost all of which are source code but if you look around the edges you can see people experimenting with the political ramifications of a system like that 
 someone put up all the wikileaked cables from the state department along with software used to interpret them  including my favorite use ever of the cablegate cables which is a tool for detecting naturally occurring
  the new york senate
 has put up something called open legislation also hosting it on github again for all of the reasons of updating and fluidity you can go and pick your senator and then you can see a list of bills they have sponsored 
 someone going by divegeek has put up the utah code the laws of the state of utah  and they 've put it up there not
 just to distribute the code but with the very interesting possibility that this could be used to further the development of legislation  
 somebody put up a tool during the copyright debate last year in the senate saying it 's strange that hollywood has more access to canadian legislators
 than canadian citizens do why don 't we use
 bill might look like and it includes this very evocative screenshot  
 this is a called a diff this thing on the right here this shows you for text that many people are editing  
 when a change was made who made it and what the change is the stuff in red is the stuff that got deleted the stuff in green is the stuff that got added 
 programmers take this capability for granted no democracy anywhere in the
  world offers this feature to its citizens for either legislation or for budgets  even though those are the things done with our consent and with our money
 now i would love to tell you that the fact that the open source programmers have worked out a collaborative method that is large scale  
  in sync with the ideals of democracy i would love to tell you that because those tools are in place the innovation is inevitable  
 but it 's not 
 part of the problem of course is just a lack of information  
 somebody put a question up on quora saying why is it that lawmakers don 't use distributed version control this graphically was the answer
  the bigger problem of course  is power 
 the people experimenting with participation don 't have legislative power and the people who have legislative power are not experimenting with participation 
 they are experimenting with openness there 's no democracy worth the name that doesn 't have a transparency move  but transparency is openness in only
  and being given a dashboard without a steering wheel has never been the core promise a democracy makes to its citizens  
 so consider this 
 the thing that got martha payne 's opinions out into the public was a piece of technology  
 but the thing that kept them there was political will it was the expectation of the citizens that she would not be censored
  we 're in with these collaboration tools we have them we 've seen them they work can we use them 
 can we apply the techniques that worked here
 to this t s eliot once said one of the most momentous things that can happen to a culture
 is that they acquire a new form of prose i think that 's wrong but
  i think it 's right for argumentation right a momentous thing that can happen to a culture is they can acquire a new style of arguing  
 trial by jury  voting  peer review  now this right 
 a new form of arguing has been invented in our lifetimes in the last decade in fact it 's large it 's distributed it
 and it 's compatible with the ideals of democracy  
 the question for us now is are we going to let the programmers keep it to themselves or are we going to try and take it and press it into service for society at large
